{"version":3,"sources":["webpack:///./src/pages/p2p/v2/index.js","webpack:///./src/pages/p2p/components/_dp2p.js","webpack:///./src/pages/p2p/components/_hero.js"],"names":["ExchangeSteps","Loadable","P2PBanner","Numbers","Availability","DP2P_CONTENT","title","translate_text","subtitle","subtitle_mobile","components","key","image_name","image_alt","localize","WithIntl","type","no_live_chat","description","Desktop","content","Mobile","reverse","P2P","StyledSection","styled","SectionContainer","device","tabletL","StyledContainer","Container","Content","div","props","margin_right","Text","ImageWrapper","StyledHeader","Header","StyledText","Row","flex_direction","DP2P","two_title","data","useStaticQuery","map","item","index","is_even","mt","second_title","second_subtitle","alt","width","BackgroundWrapper","Background","Wrapper","ImgWrapper","mobileL","InformationWrapper","Flex","tablet","mobileM","HeroContent","laptopM","mobileS","TryButton","LinkButton","HeroComponent","background_data","img_data","height","direction","as","weight","secondary","to","external","is_deriv_app_link","target","rel","Hero","min_width"],"mappings":"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","file":"component---src-pages-p-2-p-v-2-index-js-5a67aea53ad817f65fc3.js","sourcesContent":["import React from 'react'\nimport Loadable from '@loadable/component'\nimport Hero from '../components/_hero'\nimport DP2P from '../components/_dp2p'\nimport { localize, Localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\nimport { SEO, Show } from 'components/containers'\nconst ExchangeSteps = Loadable(() => import('../components/_exchange-steps'))\nconst P2PBanner = Loadable(() => import('../components/_p2pbanner'))\nconst Numbers = Loadable(() => import('../components/_numbers'))\nconst Availability = Loadable(() => import('../components/_availability'))\n\nconst DP2P_CONTENT = [\n    {\n        title: <Localize translate_text=\"Save time\" />,\n        subtitle: <Localize translate_text=\"Exchange in minutes. Less waiting, more trading.\" />,\n        subtitle_mobile: (\n            <Localize\n                translate_text=\"Exchange in minutes.<0 />Less waiting, more trading.\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'buy_sell',\n        image_alt: localize('Buy and sell'),\n    },\n    {\n        title: <Localize translate_text=\"Works in your local currency\" />,\n        subtitle: <Localize translate_text=\"Exchange with fellow traders at pre-agreed rates.\" />,\n        subtitle_mobile: (\n            <Localize translate_text=\"Exchange with fellow traders at pre-agreed rates.\" />\n        ),\n\n        image_name: 'local_currency',\n        image_alt: localize('Local currency'),\n    },\n    {\n        title: <Localize translate_text=\"Available as web and mobile apps\" />,\n        subtitle: (\n            <Localize translate_text=\"Easily make deposits and withdrawals on your desktop and mobile devices.\" />\n        ),\n        subtitle_mobile: (\n            <Localize translate_text=\"Easily make deposits and withdrawals on your desktop and mobile devices.\" />\n        ),\n\n        image_name: 'web_and_mobile',\n        image_alt: localize('Web and mobile apps'),\n    },\n]\n\nconst DP2P_v2 = () => {\n    return (\n        <Layout type=\"p2p\" no_live_chat>\n            <SEO\n                title={localize('DP2P')}\n                description={localize('Faster deposits and withdrawals')}\n            />\n            <Show.Desktop>\n                <Hero\n                    title={\n                        <Localize\n                            translate_text=\"Faster <0 />deposits and withdrawals\"\n                            components={[<br key={0} />]}\n                        />\n                    }\n                    content={\n                        <Localize translate_text=\"Waiting too long? With DP2P, it just takes minutes. Spend more time on things that really matter.\" />\n                    }\n                    image_name=\"DP2P\"\n                />\n            </Show.Desktop>\n            <Show.Mobile>\n                <Hero\n                    title={localize('Faster deposits and withdrawals')}\n                    content={\n                        <Localize translate_text=\"Waiting too long? With DP2P, it just takes minutes. Spend more time on things that really matter.\" />\n                    }\n                    image_name=\"DP2P\"\n                />\n            </Show.Mobile>\n            <DP2P reverse P2P={DP2P_CONTENT} />\n            <Numbers />\n            <ExchangeSteps />\n            <Availability />\n            <P2PBanner\n                title={localize('Get speedier deposits and withdrawals today')}\n                image_name=\"DP2P\"\n            />\n        </Layout>\n    )\n}\n\nexport default WithIntl()(DP2P_v2)\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, SectionContainer, Show } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\n\nconst StyledSection = styled(SectionContainer)`\n    background-color: var(--color-white);\n    padding: 8rem 0 0 0;\n\n    @media ${device.tabletL} {\n        padding-top: 40px;\n    }\n`\nconst StyledContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n`\nconst Content = styled.div`\n    width: 100%;\n    max-width: 58.8rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n\n    ${Text} {\n        font-size: 2.4rem;\n        margin-top: 0.8rem;\n\n        @media ${device.tabletL} {\n            text-align: center;\n            font-size: 16px;\n        }\n    }\n\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\n\nconst ImageWrapper = styled.div`\n    max-width: 47.1rem;\n    width: 100%;\n    max-height: 30rem;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        margin: 2rem auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    font-size: var(--text-size-l);\n    line-height: 1.25;\n\n    @media ${device.tabletL} {\n        width: 98%;\n        margin-top: 0;\n        text-align: center;\n        font-size: 24px;\n    }\n`\nconst StyledText = styled(Text)`\n    font-size: 3.2rem;\n    line-height: 40px;\n    text-align: center;\n\n    @media ${device.tabletL} {\n        font-size: 16px;\n        line-height: 24px;\n    }\n`\nconst Row = styled.div`\n    flex-direction: ${(props) => props.flex_direction};\n    width: 100%;\n    display: flex;\n    margin-top: 8rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n        margin-top: 40px;\n    }\n`\nconst query = graphql`\n    query {\n        buy_sell: file(relativePath: { eq: \"p2p/p2p_buy_sell.png\" }) {\n            ...fadeIn\n        }\n        local_currency: file(relativePath: { eq: \"p2p/p2p_local_currency.png\" }) {\n            ...fadeIn\n        }\n        web_and_mobile: file(relativePath: { eq: \"p2p/p2p_web_and_mobile.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst DP2P = ({ P2P, reverse, two_title }) => {\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection>\n            <StyledContainer>\n                <StyledText>\n                    {localize(\n                        'DP2P is Deriv’s peer-to-peer deposit and withdrawal service. It’s where you can get money in and out of your Deriv account via exchanges with fellow traders.',\n                    )}\n                </StyledText>\n                {P2P.map((item, index) => {\n                    let is_even = reverse ? (index + 1) % 2 : index % 2\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content margin_right={!is_even ? '12.6rem' : '0'}>\n                                <StyledHeader>{item.title}</StyledHeader>\n                                <Show.Desktop>\n                                    <Text>{item.subtitle}</Text>\n                                </Show.Desktop>\n                                <Show.Mobile>\n                                    <Text>{item.subtitle_mobile}</Text>\n                                </Show.Mobile>\n                                {two_title && (\n                                    <>\n                                        <StyledHeader mt=\"2.4rem\">{item.second_title}</StyledHeader>\n                                        <Text>{item.second_subtitle}</Text>\n                                    </>\n                                )}\n                            </Content>\n                            <ImageWrapper margin_right={!is_even ? '0' : '12.6rem'}>\n                                <QueryImage\n                                    data={data[item.image_name]}\n                                    alt={item.image_alt}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nDP2P.propTypes = {\n    P2P: PropTypes.array,\n    reverse: PropTypes.bool,\n    two_title: PropTypes.bool,\n}\n\nexport default DP2P\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Flex, Container, Show } from 'components/containers'\nimport { Header, QueryImage, ImageWrapper } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { Background } from 'components/elements/background-image'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device.js'\n\nconst BackgroundWrapper = styled(Background)`\n    height: 100%;\n    width: 100%;\n`\n\nconst Wrapper = styled(Container)`\n    justify-content: space-between;\n    background-color: transparent;\n    width: 80%;\n    height: unset;\n\n    @media ${device.tabletL} {\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\n\nconst ImgWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    max-width: 576px;\n    max-height: 700px;\n\n    .gatsby-image-wrapper {\n        width: 100%;\n        height: 100%;\n    }\n    ${ImageWrapper} {\n        width: 100%;\n        height: 100%;\n\n        picture > img {\n            object-fit: contain !important;\n        }\n    }\n\n    @media ${device.tabletL} {\n        max-width: 313px;\n        max-height: 380px;\n    }\n    @media ${device.mobileL} {\n        max-width: 240px;\n        max-height: 292px;\n    }\n`\n\nconst InformationWrapper = styled(Flex)`\n    width: 100%;\n    max-width: 60.5rem;\n    z-index: 1;\n\n    @media ${device.tabletL} {\n        max-width: 42rem;\n    }\n    @media ${device.tablet} {\n        top: 280px;\n        max-width: 350px;\n        padding: 0 16px;\n    }\n    @media ${device.mobileL} {\n        max-width: 328px;\n    }\n    @media ${device.mobileM} {\n        padding: 0;\n    }\n`\n\nconst HeroContent = styled(Flex)`\n    flex-direction: column;\n    justify-content: flex-start;\n    height: unset;\n\n    ${Header} {\n        font-size: 24px;\n        font-weight: 200;\n        color: var(--color-white);\n        display: flex;\n        margin-top: 1.6rem;\n        line-height: 3.6rem;\n        max-width: 78%;\n    }\n    @media ${device.laptopM} {\n        ${Header} {\n            font-size: 22px;\n        }\n    }\n    @media ${device.tabletL} {\n        ${Header} {\n            font-size: 16px;\n            max-width: 74%;\n        }\n    }\n    @media ${device.mobileL} {\n        ${Header} {\n            font-size: 20px;\n            line-height: 25px;\n            margin-top: 16px;\n        }\n    }\n    @media ${device.mobileS} {\n        ${Header} {\n            max-width: 98%;\n        }\n    }\n`\nconst StyledHeader = styled(Header)`\n    color: var(--color-white);\n    line-height: 10rem;\n    font-weight: 600;\n    display: flex;\n    font-size: 8rem;\n\n    @media ${device.laptopM} {\n        width: 100%;\n        font-size: 6rem;\n        line-height: 8rem;\n    }\n    @media ${device.tabletL} {\n        margin-top: 2rem;\n        font-size: 40px;\n        line-height: 6rem;\n    }\n    @media ${device.mobileL} {\n        line-height: 50px;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    padding: 14px 16px;\n    width: min-content;\n    white-space: nowrap;\n    font-size: 14px;\n    margin-top: 3.2rem;\n    margin-bottom: 40px;\n    border: unset;\n\n    @media ${device.mobileL} {\n        padding: 1.5rem 1.6rem;\n        height: 42px;\n        white-space: nowrap;\n        margin-bottom: 2rem;\n    }\n    @media ${device.mobileL} {\n        margin-top: 24px;\n        margin-bottom: 40px;\n    }\n`\n\nconst HeroComponent = ({ title, content, background_data, img_data }) => {\n    return (\n        <BackgroundWrapper data={background_data}>\n            <Wrapper>\n                <InformationWrapper height=\"unset\" direction=\"column\">\n                    <StyledHeader as=\"h1\" weight={500}>\n                        {title}\n                    </StyledHeader>\n                    <HeroContent>\n                        <Header as=\"h2\">{content}</Header>\n                    </HeroContent>\n                    <TryButton\n                        secondary=\"true\"\n                        to=\"/cashier/P2P\"\n                        external=\"true\"\n                        is_deriv_app_link\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        {localize('Try DP2P now')}\n                    </TryButton>\n                </InformationWrapper>\n                <ImgWrapper>\n                    <QueryImage\n                        data={img_data}\n                        alt={'p2p background'}\n                        height={'700px'}\n                        width={'576px'}\n                    />\n                </ImgWrapper>\n            </Wrapper>\n        </BackgroundWrapper>\n    )\n}\n\nconst query = graphql`\n    query {\n        p2p_hero_background: file(relativePath: { eq: \"p2p/p2p_hero_background.png\" }) {\n            ...fadeIn\n        }\n        p2p_hero_background_mobile: file(\n            relativePath: { eq: \"p2p/p2p_hero_background_mobile.png\" }\n        ) {\n            ...fadeIn\n        }\n        p2p_hero_img: file(relativePath: { eq: \"p2p/p2p_hero_img.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Hero = ({ title, content }) => {\n    const data = useStaticQuery(query)\n\n    return (\n        <div>\n            <Show.Desktop min_width=\"992\">\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background']}\n                    img_data={data['p2p_hero_img']}\n                />\n            </Show.Desktop>\n            <Show.Mobile>\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background_mobile']}\n                    img_data={data['p2p_hero_img']}\n                />\n            </Show.Mobile>\n        </div>\n    )\n}\n\nHeroComponent.propTypes = {\n    background_data: PropTypes.any,\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    img_data: PropTypes.any,\n    title: PropTypes.string,\n}\n\nHero.propTypes = {\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    title: PropTypes.string,\n}\n\nexport default Hero\n"],"sourceRoot":""}