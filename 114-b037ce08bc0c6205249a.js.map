{"version":3,"sources":["webpack:///./src/pages/home/_trade-types-card.js","webpack:///./src/pages/home/_trade-types.js"],"names":["CustomLinkWrap","styled","div","CustomWrap","LogoDiv","StyledText","Text","StyledCard","LocalizedLink","Header","TradeTypesCard","icon","title","description","link","linkTitle","ariaLabel","to","weight","mr","color","localize","src","Arrow","alt","width","height","TradingButton","LinkButton","StyledContainer","Container","trade_types","MarginLogo","translate_text","OptionsLogo","MultipliersLogo","TradeTypes","direction","max_width","as","type","size","mt","mb","secondary","map","trade_type","idx","key"],"mappings":"6KAOMA,EAAiBC,IAAOC,IAAV,mFAAGD,CAAH,6GAQdE,EAAaF,IAAOC,IAAV,+EAAGD,CAAH,sDAKVG,EAAUH,IAAOC,IAAV,4EAAGD,CAAH,wBAIPI,EAAaJ,YAAOK,KAAV,+EAAGL,CAAH,yCAKVM,EAAaN,YAAOO,KAAV,+EAAGP,CAAH,0iBAkBNE,EAGAH,EAQJM,IAGAG,KAkCSC,EA1BQ,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtD,OACI,kBAACR,EAAD,CAAYS,UAAWD,EAAWE,GAAIH,GAClC,kBAACX,EAAD,KACI,kBAACC,EAAD,KAAUO,GACV,kBAAC,IAAD,KAASC,GACT,kBAACP,EAAD,KAAaQ,IAEjB,kBAACb,EAAD,KACI,kBAAC,IAAD,CAAMkB,OAAO,OAAOC,GAAG,SAASC,MAAM,OACjCC,YAAS,eACN,IACR,yBAAKC,IAAKC,IAAOC,IAAI,QAAQC,MAAM,KAAKC,OAAO,U,4DCtEzDC,EAAgB1B,YAAO2B,KAAV,8EAAG3B,CAAH,2FAQb4B,EAAkB5B,YAAO6B,KAAV,gFAAG7B,CAAH,gEAqEf8B,EAAc,CA5BL,CACXpB,KAAM,yBAAKW,IAAKU,IAAYR,IAAI,SAASC,MAAM,KAAKC,OAAO,OAC3Dd,MAAO,kBAAC,IAAD,CAAUqB,eAAe,mBAChCpB,YACI,kBAAC,IAAD,CAAUoB,eAAe,iFAE7BnB,KAAM,sBACNC,UAAWM,YAAS,WAER,CACZV,KAAM,yBAAKW,IAAKY,IAAaV,IAAI,UAAUC,MAAM,KAAKC,OAAO,OAC7Dd,MAAO,kBAAC,IAAD,CAAUqB,eAAe,YAChCpB,YACI,kBAAC,IAAD,CAAUoB,eAAe,oFAE7BnB,KAAM,uBACNC,UAAWM,YAAS,YAEJ,CAChBV,KAAM,yBAAKW,IAAKa,IAAiBX,IAAI,cAAcC,MAAM,KAAKC,OAAO,OACrEd,MAAO,kBAAC,IAAD,CAAUqB,eAAe,gBAChCpB,YACI,kBAAC,IAAD,CAAUoB,eAAe,wFAE7BnB,KAAM,0BACNC,UAAWM,YAAS,gBAKTe,UAhEI,WACf,OACI,6BACI,kBAACP,EAAD,KACI,kBAAC,IAAD,CAAMQ,UAAU,SAASC,UAAU,WAC/B,kBAAC,IAAD,CAAQC,GAAG,KAAKC,KAAK,iBAChBnB,YAAS,gBAEd,kBAAC,IAAD,CAAMoB,KAAK,SAASC,GAAG,SAASC,GAAG,QAC9BtB,YACG,4EAGR,kBAACM,EAAD,CAAea,KAAK,SAASI,UAAU,OAAO3B,GAAG,YAC5CI,YAAS,mBAGlB,kBAAC,IAAD,KACKU,EAAYc,KAAI,SAACC,EAAYC,GAAb,OACb,kBAAC,EAAD,CACIC,IAAKD,EACLpC,KAAMmC,EAAWnC,KACjBC,MAAOkC,EAAWlC,MAClBC,YAAaiC,EAAWjC,YACxBC,KAAMgC,EAAWhC,KACjBC,UAAW+B,EAAW/B","file":"114-b037ce08bc0c6205249a.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Header, Text } from 'components/elements'\nimport { localize, LocalizedLink } from 'components/localization'\nimport Arrow from 'images/svg/arrow-right.svg'\n\nconst CustomLinkWrap = styled.div`\n    display: flex;\n    opacity: 0;\n    transition: visibility 0s, opacity 0.5s ease-in;\n    margin-top: 5px;\n    align-items: center;\n`\n\nconst CustomWrap = styled.div`\n    display: block;\n    transition: transform 0.2s ease-in;\n`\n\nconst LogoDiv = styled.div`\n    text-align: center;\n`\n\nconst StyledText = styled(Text)`\n    text-align: center;\n    font-size: 1.6rem;\n`\n\nconst StyledCard = styled(LocalizedLink)`\n    max-width: 28.2rem;\n    margin: 0 1.2rem;\n    padding: 6.4rem 2.3rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 100%;\n    box-shadow: none;\n    border: 1px solid var(--color-grey-2);\n    border-radius: 8px;\n    text-decoration: none;\n\n    &:hover {\n        border-color: white;\n        box-shadow: 0 16px 20px 0 rgba(0, 0, 0, 0.05), 0 0 20px 0 rgba(0, 0, 0, 0.05);\n\n        ${CustomWrap} {\n            transform: translateY(-10px);\n        }\n        ${CustomLinkWrap} {\n            visibility: visible;\n            opacity: 1;\n        }\n    }\n    &:nth-child(4) {\n        margin-right: unset;\n    }\n    ${Text} {\n        font-size: 1.6rem;\n    }\n    ${Header} {\n        text-align: center;\n        font-size: 2.4rem;\n        margin-bottom: 0.8rem;\n        margin-top: 2.4rem;\n    }\n`\n\nconst TradeTypesCard = ({ icon, title, description, link, linkTitle }) => {\n    return (\n        <StyledCard ariaLabel={linkTitle} to={link}>\n            <CustomWrap>\n                <LogoDiv>{icon}</LogoDiv>\n                <Header>{title}</Header>\n                <StyledText>{description}</StyledText>\n            </CustomWrap>\n            <CustomLinkWrap>\n                <Text weight=\"bold\" mr=\"0.8rem\" color=\"red\">\n                    {localize('Learn more')}\n                </Text>{' '}\n                <img src={Arrow} alt=\"arrow\" width=\"16\" height=\"16\" />\n            </CustomLinkWrap>\n        </StyledCard>\n    )\n}\n\nTradeTypesCard.propTypes = {\n    description: PropTypes.any,\n    icon: PropTypes.any,\n    link: PropTypes.any,\n    linkTitle: PropTypes.any,\n    title: PropTypes.any,\n}\n\nexport default TradeTypesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport TradeTypesCard from './_trade-types-card'\nimport { Header, Text } from 'components/elements'\nimport { localize, Localize } from 'components/localization'\nimport { Container, Flex } from 'components/containers'\nimport MarginLogo from 'images/svg/trade-types/margin.svg'\nimport OptionsLogo from 'images/svg/trade-types/options.svg'\nimport MultipliersLogo from 'images/svg/trade-types/multipliers.svg'\nimport { LinkButton } from 'components/form'\n\nconst TradingButton = styled(LinkButton)`\n    height: 4.8rem;\n    display: flex;\n    align-items: center;\n    max-width: 18rem;\n    justify-content: center;\n`\n\nconst StyledContainer = styled(Container)`\n    margin: 0 auto 8rem;\n    height: auto;\n    width: 90%;\n    flex-wrap: nowrap;\n`\n\nconst TradeTypes = () => {\n    return (\n        <div>\n            <StyledContainer>\n                <Flex direction=\"column\" max_width=\"28.2rem\">\n                    <Header as=\"h3\" type=\"section-title\">\n                        {localize('Trade types')}\n                    </Header>\n                    <Text size=\"2.4rem\" mt=\"1.6rem\" mb=\"5rem\">\n                        {localize(\n                            'Trade what you like, the way you like it, and on your preferred market.',\n                        )}\n                    </Text>\n                    <TradingButton type=\"submit\" secondary=\"true\" to=\"/signup/\">\n                        {localize('Start trading')}\n                    </TradingButton>\n                </Flex>\n                <Flex>\n                    {trade_types.map((trade_type, idx) => (\n                        <TradeTypesCard\n                            key={idx}\n                            icon={trade_type.icon}\n                            title={trade_type.title}\n                            description={trade_type.description}\n                            link={trade_type.link}\n                            linkTitle={trade_type.linkTitle}\n                        />\n                    ))}\n                </Flex>\n            </StyledContainer>\n        </div>\n    )\n}\n\nconst margin = {\n    icon: <img src={MarginLogo} alt=\"margin\" width=\"48\" height=\"49\" />,\n    title: <Localize translate_text=\"Margin Trading\" />,\n    description: (\n        <Localize translate_text=\"Trade with leverage and low spreads for better returns on successful trades.\" />\n    ),\n    link: '/trade-types/margin',\n    linkTitle: localize('Margin'),\n}\nconst options = {\n    icon: <img src={OptionsLogo} alt=\"options\" width=\"48\" height=\"49\" />,\n    title: <Localize translate_text=\"Options\" />,\n    description: (\n        <Localize translate_text=\"Earn fixed payouts by predicting an asset's price movement within a fixed time.\" />\n    ),\n    link: '/trade-types/options',\n    linkTitle: localize('Options'),\n}\nconst multipliers = {\n    icon: <img src={MultipliersLogo} alt=\"multipliers\" width=\"48\" height=\"49\" />,\n    title: <Localize translate_text=\"Multipliers\" />,\n    description: (\n        <Localize translate_text=\"Get the best of both - the upside of margin trading with the simplicity of options.\" />\n    ),\n    link: '/trade-types/multiplier',\n    linkTitle: localize('Multiplier'),\n}\n\nconst trade_types = [margin, options, multipliers]\n\nexport default TradeTypes\n"],"sourceRoot":""}