{"version":3,"sources":["webpack:///./src/pages/dbot/_dbot-video.js"],"names":["Container","styled","section","device","tabletL","Tab","div","TabsWrapper","mobileL","VideoWrapper","StepCommon","css","props","no_margin","Step","Header","current_step","image_name","GoToLiveDemo","LinkButton","GotoLiveWrapper","DtraderTabs","data","useStaticQuery","React","useState","setStep","clickHandler","incoming_step","as","type","lh","align","onClick","localize","secondary","external","to","is_deriv_app_link","target","rel","alt","width"],"mappings":"6FAAA,wGA2BMA,EAAYC,IAAOC,QAAV,yEAAGD,CAAH,+KAQFE,IAAOC,SAKdC,EAAMJ,IAAOK,IAAV,mEAAGL,CAAH,mCAIHM,EAAcN,IAAOK,IAAV,2EAAGL,CAAH,kIAQJE,IAAOC,QAIPD,IAAOK,SAIdC,EAAeR,IAAOK,IAAV,4EAAGL,CAAH,mCAIZS,EAAaC,YAAH,+GAIHR,IAAOC,SAGE,SAACQ,GAAD,OAAYA,EAAMC,UAAY,IAAM,UAGpDC,EAAOb,YAAOc,KAAV,oEAAGd,CAAH,aACJS,GACA,SAACE,GAAD,OACEA,EAAMI,eAAiBJ,EAAMK,WACvB,uEACA,0DAERC,EAAejB,YAAOkB,KAAV,4EAAGlB,CAAH,yKAOLE,IAAOC,SAMdgB,EAAkBnB,IAAOK,IAAV,+EAAGL,CAAH,kDAGRE,IAAOC,SAuGLiB,UAnGK,WAChB,IAAMC,EAAOC,yBA9FN,cA6Fe,EAEUC,IAAMC,SAAS,UAAxCT,EAFe,KAEDU,EAFC,KAGhBC,EAAe,SAACC,GACdA,GAAiBZ,GACrBU,EAAQE,IAEZ,OACI,kBAAC5B,EAAD,KACI,kBAACO,EAAD,KACI,kBAACF,EAAD,KACI,kBAACS,EAAD,CACIe,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNnB,WAAS,EACTI,WAAW,SACXD,aAAcA,EACdiB,QAAS,kBAAMN,EAAa,YAE3BO,YAAS,0BAGlB,kBAAC7B,EAAD,KACI,kBAACS,EAAD,CACIe,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNf,WAAW,SACXD,aAAcA,EACdiB,QAAS,kBAAMN,EAAa,YAE3BO,YAAS,gCAGlB,kBAAC7B,EAAD,KACI,kBAACS,EAAD,CACIe,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNf,WAAW,SACXD,aAAcA,EACdiB,QAAS,kBAAMN,EAAa,YAE3BO,YAAS,+BAGlB,kBAAC7B,EAAD,KACI,kBAACS,EAAD,CACIe,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNf,WAAW,SACXD,aAAcA,EACdiB,QAAS,kBAAMN,EAAa,YAE3BO,YAAS,gBAGlB,kBAAC7B,EAAD,KACI,kBAACS,EAAD,CACIe,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNf,WAAW,SACXD,aAAcA,EACdiB,QAAS,kBAAMN,EAAa,YAE3BO,YAAS,qBAGlB,kBAACd,EAAD,KACI,kBAACF,EAAD,CACIiB,UAAU,OACVC,SAAS,OACTC,GAAG,OACHC,mBAAiB,EACjBC,OAAO,SACPC,IAAI,uBAEHN,YAAS,sBAItB,kBAACzB,EAAD,KACI,kBAAC,IAAD,CACIa,KAAMA,EAAKN,GACXyB,IAAKP,YAAS,UAAUlB,GACxB0B,MAAM","file":"104-8439ff958725fe4874f6.js","sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled, { css } from 'styled-components'\nimport { localize } from 'components/localization'\nimport { Header, QueryImage } from 'components/elements'\nimport device from 'themes/device.js'\nimport { LinkButton } from 'components/form'\n\nconst query = graphql`\n    query {\n        step_1: file(relativePath: { eq: \"dbot-step1.png\" }) {\n            ...fadeIn\n        }\n        step_2: file(relativePath: { eq: \"dbot-step2.png\" }) {\n            ...fadeIn\n        }\n        step_3: file(relativePath: { eq: \"dbot-step3.png\" }) {\n            ...fadeIn\n        }\n        step_4: file(relativePath: { eq: \"dbot-step4.png\" }) {\n            ...fadeIn\n        }\n        step_5: file(relativePath: { eq: \"dbot-step5.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst Container = styled.section`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-top: 4rem;\n    align-items: center;\n\n    @media ${device.tabletL} {\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\nconst Tab = styled.div`\n    width: 100%;\n    margin-top: 2.4rem;\n`\nconst TabsWrapper = styled.div`\n    width: 40.7rem;\n    margin-right: 2.6rem;\n\n    div:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        width: 80%;\n        margin: 2rem 0 0;\n    }\n    @media ${device.mobileL} {\n        width: 100%;\n    }\n`\nconst VideoWrapper = styled.div`\n    max-width: 79.2rem;\n    width: 100%;\n`\nconst StepCommon = css`\n    font-weight: 500;\n    cursor: pointer;\n    padding-left: 1.8rem;\n    @media ${device.tabletL} {\n        text-align: left;\n        border: none;\n        margin-top: ${(props) => (props.no_margin ? '0' : '2rem')};\n    }\n`\nconst Step = styled(Header)`\n    ${StepCommon}\n    ${(props) =>\n        props.current_step === props.image_name\n            ? 'color: var(--color-black-3); border-left: 4px solid var(--color-red)'\n            : 'opacity: 0.2; border-left: 4px solid rgb(0, 0, 0, 0)'};\n`\nconst GoToLiveDemo = styled(LinkButton)`\n    border: 2px solid var(--color-red);\n    font-weight: bold;\n    line-height: 1.43;\n    width: fit-content;\n    margin-top: 4rem;\n\n    @media ${device.tabletL} {\n        max-width: 100%;\n        margin: 4rem auto;\n        font-size: 1.75rem;\n    }\n`\nconst GotoLiveWrapper = styled.div`\n    margin-top: 4rem;\n\n    @media ${device.tabletL} {\n        margin: 4rem auto;\n    }\n`\nconst DtraderTabs = () => {\n    const data = useStaticQuery(query)\n    const [current_step, setStep] = React.useState('step_1')\n    const clickHandler = (incoming_step) => {\n        if (incoming_step == current_step) return\n        setStep(incoming_step)\n    }\n    return (\n        <Container>\n            <TabsWrapper>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        no_margin\n                        image_name=\"step_1\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_1')}\n                    >\n                        {localize('1. Select your asset')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_2\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_2')}\n                    >\n                        {localize('2. Set purchase conditions')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_3\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_3')}\n                    >\n                        {localize('3. Set restart conditions')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_4\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_4')}\n                    >\n                        {localize('4. Run bot')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_5\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_5')}\n                    >\n                        {localize('5. Check profit')}\n                    </Step>\n                </Tab>\n                <GotoLiveWrapper>\n                    <GoToLiveDemo\n                        secondary=\"true\"\n                        external=\"true\"\n                        to=\"/bot\"\n                        is_deriv_app_link\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        {localize('Go to live demo')}\n                    </GoToLiveDemo>\n                </GotoLiveWrapper>\n            </TabsWrapper>\n            <VideoWrapper>\n                <QueryImage\n                    data={data[current_step]}\n                    alt={localize(`DBot - ${current_step}`)}\n                    width=\"100%\"\n                />\n            </VideoWrapper>\n        </Container>\n    )\n}\nexport default DtraderTabs\n"],"sourceRoot":""}